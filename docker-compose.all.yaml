services:
  postgres:
    container_name: void-postgres
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - voidcontests

  redis:
    container_name: void-redis
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli PING
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - voidcontests

  coyote:
    image: ghcr.io/voidcontests/coyote:latest
    container_name: void-coyote
    environment:
      - CONFIG_PATH=/app/config/dev.yaml
    volumes:
      - ../coyote/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - redis
    ports:
      - "7197:7197"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:7197/api/healthcheck || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - voidcontests

  api:
    container_name: void-api
    image: ghcr.io/voidcontests/api:latest
    restart: unless-stopped
    volumes:
      - ../api/config:/app/config
    environment:
      CONFIG_PATH: ./config/dev.yaml
    depends_on:
      - postgres
      - redis
    ports:
      - "5919:5919"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:5919/api/healthcheck || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - voidcontests

  web:
    image: ghcr.io/voidcontests/web:latest
    container_name: void-web
    restart: unless-stopped
    ports:
      - "3909:3909"
    environment:
      - NODE_ENV=production
      - PORT=3909
      - HOSTNAME=0.0.0.0
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:3909/
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - voidcontests

volumes:
  postgres_data:
  redis_data:

networks:
  voidcontests:
    name: voidcontests
    driver: bridge
