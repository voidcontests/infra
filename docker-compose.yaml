services:
  postgres:
    image: postgres:17
    container_name: void-postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    profiles:
      - all
      - deps
      - backend
    networks:
      - voidcontests

  redis:
    image: redis:8
    container_name: void-redis
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "--pass", "${REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    profiles:
      - all
      - deps
      - backend
    networks:
      - voidcontests

  api:
    image: ghcr.io/voidcontests/api:${TAG-latest}
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: void-api
    restart: unless-stopped
    environment:
      CONFIG_PATH: ./config/dev.yaml
    ports:
      - "5919:5919"
    volumes:
      - ../api/config:/app/config
    depends_on:
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://127.0.0.1:5919/api/healthcheck || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    profiles:
      - all
      - backend
    networks:
      - voidcontests

  coyote:
    image: ghcr.io/voidcontests/coyote:${TAG-latest}
    build:
      context: ../coyote
      dockerfile: Dockerfile
    container_name: void-coyote
    restart: unless-stopped
    environment:
      - CONFIG_PATH=/app/config/dev.yaml
    ports:
      - "7197:7197"
    volumes:
      - ../coyote/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://127.0.0.1:7197/api/healthcheck || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    profiles:
      - all
      - backend
    networks:
      - voidcontests

  web:
    image: ghcr.io/voidcontests/web:${TAG-latest}
    build:
      context: ../web
      dockerfile: Dockerfile
    container_name: void-web
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3909
      - HOSTNAME=0.0.0.0
    ports:
      - "3909:3909"
    depends_on:
      api:
        condition: service_healthy
        required: true
      coyote:
        condition: service_healthy
        required: true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3909/"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    profiles:
      - all
      - web
    networks:
      - voidcontests

volumes:
  postgres_data:
  redis_data:

networks:
  voidcontests:
    name: voidcontests
    driver: bridge
